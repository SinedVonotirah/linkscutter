<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
 
 	<context:component-scan base-package="by.vonotirah.linkscutter" />
 	
    <http pattern="/resource/**" security="none"/>
 	
	<http entry-point-ref="restAuthenticationEntryPoint" use-expressions="true" >			
	   <intercept-url pattern="/links" access="hasRole('ROLE_USER')"/>	   
	   <form-login login-page="/login"
	   	  default-target-url="/links"
	      authentication-success-handler-ref="restAuthenticationSuccessHandler"
	      authentication-failure-handler-ref="restAuthenticationFailureHandler"
	   />
       <logout logout-url="/logout" delete-cookies="true" invalidate-session="true" success-handler-ref="restLogoutSuccessHandler"/>
       <csrf disabled="true"/>
    </http>
    
    <global-method-security pre-post-annotations="enabled">
        <expression-handler ref="expressionHandler"/>
    </global-method-security>
 
    <beans:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <beans:property name="permissionEvaluator" ref="todoPermissionEvaluator" />
    </beans:bean>
 
    <beans:bean id="todoPermissionEvaluator" class="by.vonotirah.linkscutter.webapp.security.LinksPermissionEvaluator"/>
 
	
	<!-- Configures a custom login filter bean  -->
    <beans:bean id="loginFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationFailureHandler" ref="restAuthenticationFailureHandler"/>
        <beans:property name="authenticationSuccessHandler" ref="restAuthenticationSuccessHandler"/>
        <beans:property name="filterProcessesUrl" value="/login"/>
        <beans:property name="usernameParameter" value="username"/>
        <beans:property name="passwordParameter" value="password"/>
        <beans:property name="postOnly" value="true"/>
    </beans:bean> 
    
    <!-- Configures a custom authentication success handler that returns HTTP status code 200 -->
    <beans:bean id="restAuthenticationSuccessHandler" class="by.vonotirah.linkscutter.webapp.security.RestAuthenticationSuccessHandler"/>
 
    <!-- Configures a custom authentication failure handler that returns HTTP status code 401 -->
    <beans:bean id="restAuthenticationFailureHandler" class="by.vonotirah.linkscutter.webapp.security.RestAuthenticationFailureHandler"/>
 
    <!-- Configures a custom logout success handler that returns HTTP status code 200 -->
    <beans:bean id="restLogoutSuccessHandler" class="by.vonotirah.linkscutter.webapp.security.RestLogoutSuccessHandler"/>

	
	<authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="customUserDetailsService"/>
    </authentication-manager>
    
    <beans:bean id="customUserDetailsService" class="by.vonotirah.linkscutter.webapp.security.CustomUserDetailsService" />
    
</beans:beans>